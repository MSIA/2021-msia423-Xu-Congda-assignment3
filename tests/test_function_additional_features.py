import pandas as pd
import numpy as np
import pytest

from src.prepare_data import additional_features

def test_additional_features_happy():
    df_in_values = [[3.000000e+00, 1.400000e+02, 4.350000e+01, 8.330000e-02,
                     8.628417e+02, 2.540000e-02, 3.889000e+00, 1.630000e+02,
                     2.400000e+02, 2.133555e+02, 0.000000e+00],
                    [3.000000e+00, 1.350000e+02, 4.190630e+01, 7.900000e-02,
                     6.903291e+02, 2.590000e-02, 3.834000e+00, 1.670000e+02,
                     2.390000e+02, 2.137188e+02, 0.000000e+00],
                    [2.000000e+00, 1.260000e+02, 2.105860e+01, 4.060000e-02,
                     3.083583e+02, 6.840000e-02, 3.170200e+00, 1.740000e+02,
                     2.400000e+02, 2.275859e+02, 0.000000e+00],
                    [4.000000e+00, 1.970000e+02, 7.748050e+01, 8.900000e-02,
                     8.744709e+02, 2.430000e-02, 3.944200e+00, 1.550000e+02,
                     2.390000e+02, 1.972773e+02, 0.000000e+00],
                    [7.000000e+00, 1.930000e+02, 8.883980e+01, 8.840000e-02,
                     8.101126e+02, 2.230000e-02, 3.931800e+00, 1.500000e+02,
                     2.360000e+02, 1.860195e+02, 0.000000e+00]]

    df_in_index = [0, 1, 2, 3, 4]

    df_in_columns = ['visible_mean', 'visible_max', 'visible_min',
                     'visible_mean_distribution', 'visible_contrast', 'visible_entropy',
                     'visible_second_angular_momentum', 'IR_mean', 'IR_max', 'IR_min',
                     'class']

    df_in = pd.DataFrame(df_in_values, index=df_in_index, columns=df_in_columns)

    df_true = pd.DataFrame(
        [[3.000000e+00, 1.400000e+02, 4.350000e+01, 8.330000e-02,
          8.628417e+02, 2.540000e-02, 3.889000e+00, 1.630000e+02,
          2.400000e+02, 2.133555e+02, 0.000000e+00, np.log(2.540000e-02), 8.628417e+02 * 2.540000e-02,
          2.400000e+02 - 2.133555e+02, (2.400000e+02 - 2.133555e+02) / 1.630000e+02],
         [3.000000e+00, 1.350000e+02, 4.190630e+01, 7.900000e-02,
          6.903291e+02, 2.590000e-02, 3.834000e+00, 1.670000e+02,
          2.390000e+02, 2.137188e+02, 0.000000e+00, np.log(2.590000e-02), 6.903291e+02 * 2.590000e-02,
          2.390000e+02 - 2.137188e+02, (2.390000e+02 - 2.137188e+02) / 1.670000e+02],
         [2.000000e+00, 1.260000e+02, 2.105860e+01, 4.060000e-02,
          3.083583e+02, 6.840000e-02, 3.170200e+00, 1.740000e+02,
          2.400000e+02, 2.275859e+02, 0.000000e+00, np.log(6.840000e-02), 3.083583e+02 * 6.840000e-02,
          2.400000e+02 - 2.275859e+02, (2.400000e+02 - 2.275859e+02) / 1.740000e+02],
         [4.000000e+00, 1.970000e+02, 7.748050e+01, 8.900000e-02,
          8.744709e+02, 2.430000e-02, 3.944200e+00, 1.550000e+02,
          2.390000e+02, 1.972773e+02, 0.000000e+00, np.log(2.430000e-02), 8.744709e+02 * 2.430000e-02,
          2.390000e+02 - 1.972773e+02, (2.390000e+02 - 1.972773e+02) / 1.550000e+02],
         [7.000000e+00, 1.930000e+02, 8.883980e+01, 8.840000e-02,
          8.101126e+02, 2.230000e-02, 3.931800e+00, 1.500000e+02,
          2.360000e+02, 1.860195e+02, 0.000000e+00, np.log(2.230000e-02), 8.101126e+02 * 2.230000e-02,
          2.360000e+02 - 1.860195e+02, (2.360000e+02 - 1.860195e+02) / 1.500000e+02]],
        index=[0, 1, 2, 3, 4],
        columns=['visible_mean', 'visible_max', 'visible_min',
                 'visible_mean_distribution', 'visible_contrast', 'visible_entropy',
                 'visible_second_angular_momentum', 'IR_mean', 'IR_max', 'IR_min',
                 'class', 'log_entropy', 'entropy_x_contrast', 'IR_range',
                 'IR_norm_range'])

    df_test = additional_features(df_in, ['log_entropy', 'entropy_x_contrast', 'IR_range', 'IR_norm_range'])

    assert df_test.equals(df_true)

def test_additional_features_unhappy():
    df_in_values = [[3.000000e+00, 1.400000e+02, 4.350000e+01, 8.330000e-02,
                     8.628417e+02, 2.540000e-02, 3.889000e+00, 1.630000e+02,
                     2.400000e+02, 2.133555e+02, 0.000000e+00],
                    [3.000000e+00, 1.350000e+02, 4.190630e+01, 7.900000e-02,
                     6.903291e+02, 2.590000e-02, 3.834000e+00, 1.670000e+02,
                     2.390000e+02, 2.137188e+02, 0.000000e+00],
                    [2.000000e+00, 1.260000e+02, 2.105860e+01, 4.060000e-02,
                     3.083583e+02, 6.840000e-02, 3.170200e+00, 1.740000e+02,
                     2.400000e+02, 2.275859e+02, 0.000000e+00],
                    [4.000000e+00, 1.970000e+02, 7.748050e+01, 8.900000e-02,
                     8.744709e+02, 2.430000e-02, 3.944200e+00, 1.550000e+02,
                     2.390000e+02, 1.972773e+02, 0.000000e+00],
                    [7.000000e+00, 1.930000e+02, 8.883980e+01, 8.840000e-02,
                     8.101126e+02, 2.230000e-02, 3.931800e+00, 1.500000e+02,
                     2.360000e+02, 1.860195e+02, 0.000000e+00]]

    df_in_index = [0, 1, 2, 3, 4]

    df_in_columns = ['visible_mean', 'visible_max', 'visible_min',
                     'visible_mean_distribution', 'visible_contrast', 'visible_entropy',
                     'visible_second_angular_momentum', 'IR_mean', 'IR_max', 'IR_min',
                     'class']

    df_in = pd.DataFrame(df_in_values, index=df_in_index, columns=df_in_columns)

    with pytest.raises(ValueError):
        additional_features(df_in, ['wrong_feature'])